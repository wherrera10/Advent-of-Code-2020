# {{trans|Go}}

function factorialbase(size, makelist)
    listlist = Vector{Vector{Int}}()
    n = 0
    while true
        divisor = 2
        makelist && (lis = zeros(Int, size))
        k = n
        while k > 0
            k, r = divrem(k, divisor)
            makelist && (divisor <= size + 1) && (lis[size - divisor + 2] = r)
            divisor += 1
        end
        if divisor > size + 2
            break
        end
        n += 1
        makelist && push!(listlist, lis)
    end
    return n, listlist
end

function maptoperms(factnums)
    perms = Vector{Vector{Int}}()
    psize = length(factnums[1]) + 1
    start = [i for i in 0:psize-1]
    for fn in factnums
        perm = deepcopy(start)
        for m in 1:length(fn)
            g = fn[m]
            if g == 0
                continue
            end
            first = m
            last = m + g
            for i in 1:g
                temp = perm[first]
                for j in first:last-1
                    perm[j] = perm[j+1]
                end
                perm[last] = temp
            end
        end
        push!(perms, perm)
    end
    perms
end

ijoin(ints, sep) = join([string(i) for i in ints], sep)
undot(s) = [parse(Int, s) for s in split(s, ".")]

function factbasenums()
    count, factnums = factorialbase(3, true)
    perms = maptoperms(factnums)
    for (i, fn) = enumerate(factnums)
        println("$(join(fn, ".")) -> $(join(perms[i], ""))\n")
    end

    count, _ = factorialbase(10, false)
    println("\nPermutations generated = $count")
    println("compared to 11! which  = $(factorial(11))\n")

    fbn51s = [
        "39.49.7.47.29.30.2.12.10.3.29.37.33.17.12.31.29.34.17.25.2.4.25.4.1.14.20.6.21.18.1.1.1.4.0.5.15.12.4.3.10.10.9.1.6.5.5.3.0.0.0",
        "51.48.16.22.3.0.19.34.29.1.36.30.12.32.12.29.30.26.14.21.8.12.1.3.10.4.7.17.6.21.8.12.15.15.13.15.7.3.12.11.9.5.5.6.6.3.4.0.3.2.1"]

    factnums = vcat(undot(fbn51s[1]), undot(fbn51s[2]))
    perms = maptoperms(factnums)
    shoe = raw"A♠K♠Q♠J♠T♠9♠8♠7♠6♠5♠4♠3♠2♠A♥K♥Q♥J♥T♥9♥8♥7♥6♥5♥4♥3♥2♥A♦K♦Q♦J♦T♦9♦8♦7♦6♦5♦4♦3♦2♦A♣K♣Q♣J♣T♣9♣8♣7♣6♣5♣4♣3♣2♣"
    cards = Vector{String}(52)

    for i in 0:51
        cards[i+1] = string(shoe[2*i+1:2*i+2])
        if cards[i+1][1] == 'T'
            cards[i+1] = "10" * cards[i+1][2]
        end
    end

    for (i, fbn51) in enumerate(fbn51s)
        println(fbn51)
        for d in perms[i]
            print(cards[d])
        end
        println("\n")
    end

    fbn51 = [shuffle(1:52-i)[1] for i in 1:51]
    println(join(string.(fbn51), "."))

    perms = maptoperms(fbn51)
    for d in perms[1]
        print(cards[d])
    end
    println()
end

factbasenums()
