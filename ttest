using LightXML

struct XMLValidationError{T<:AbstractString} <: LightXML.XMLError
    msg::T
end

const Xptr= LightXML.Xptr

"""
An XML Schema Document, produced by an XML document that is XML for the schema.
"""
mutable struct XMLSchema <: AbstractXMLNode
    ptr::Xptr
    schema::Xptr
    function XMLSchemaDoc(ptr::Xptr)
        schema = ccall((:XMLSchemaParse, libxml2), Xptr, (Xptr,), xsd.ptr)
        return new(ptr, schema)
    end
end

function validateswith(xml::XMLDocument, schema::XMLSchema, throwerrors=false)
    err = ccall((:XMLSchemaValidateDocuments, libxml2), Cint, (Xptr, Xptr), xsd.ptr, xml.ptr)
        if err
        if throwerrors
           y = ""
           throw(XMLValidationError(y))  
        end
        return false
    end
    return true
end



function testXML(schema::XMLSchema, xmlfile)
    xml = parse_file(xmlfile)
    err = validatewith(schema, xml)
end

