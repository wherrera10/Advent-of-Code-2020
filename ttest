using Gumbo

mayan_glyphs(x, y) = (x == 0 && y == 0) ? "\n<td>Θ</td>\n" : "<td>\n" * "●" ^ x * "<br />\n───" ^ y * "</td>\n"

inttomayan(n) = (s = string(n, base=20); map(ch -> reverse(divrem(parse(Int, ch, base=20), 5)), split(s, "")))

function testmayan()
    startstring = """\n
    <style>
        html,body{font-family:Verdana,sans-serif;font-size:15px;line-height:1.5}
        table, th, td { 
            table.roundedCorners { 
                border: 4px solid DarkOrange;
                border-radius: 13px; 
                border-spacing: 0;
            }
            table.roundedCorners td, 
            table.roundedCorners th { 
                border-bottom: 4px solid DarkOrange;
                padding: 10px; 
            }
            table.roundedCorners tr:last-child > td {
                border-bottom: none;
            }
            align: bottom; 
            border: 1px solid black;
        }
    </style>\n"""

    txt = startstring

    for n in [4005, 8017, 326205, 886205, 26960840421]
    txt *= "<h3>The Mayan representation for the integer $n is: </h3><table class=\"roundedcorners\"><tr>" *
            join(map(x -> mayan_glyphs(x[1], x[2]), inttomayan(n))) * "</tr></table>\n\n"
    end

    println(parsehtml(txt))
end


testmayan()


