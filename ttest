{{task}}

The '''Yellowstone sequence''', also called the '''Yellowstone permutation''', is defined as:

a(n) = n for n <= 3. 
For n >= 4,
a(n) - the smallest number not already in sequence such that a(n) is relatively prime to a(n-1) and is not relatively prime to a(n-2).

;Example:
a(n) is 4 because 4 is the smallest number following 1, 2, 3 in the sequence that is relatively prime to the entry before it (3), 
and is not relatively prime to the number two entries before it (2).

;Related tasks:
:* &nbsp; [https://rosettacode.org/wiki/Greatest_common_divisor Greatest common divisor].
:* &nbsp; [https://rosettacode.org/wiki/Plot_coordinate_pairs Plot coordinate pairs].

See also:

:* &nbsp; The OEIS entry: &nbsp; [https://oeis.org/A098550 A098550 The Yellowstone permutation].
:* &nbsp; Applegate et al, 2015: The Yellowstone Permutation [https://arxiv.org/abs/1501.01669 The Yellowstone Permutation]



Task: find and show as output the first 30 Yellowstone numbers.

Extra:  Demonstrate how to plot, with x = n and y coordinate a(n), the first 100 Yellowstone numbers.

function yellowstone(N)
    a = [1, 2, 3]
    b = Dict(1 => 1, 2 => 1, 3 => 1)
    while length(a) < N
        for i in 4:typemax(Int)
            if !haskey(b, i) && (gcd(i, a[end]) == 1) && (gcd(i, a[end - 1]) > 1)
                push!(a, i)
                b[i] = 1
                break
            end
        end
    end
    return a
end

println(yellowstone(30))

using Plots
x = 1:100
y = yellowstone(100)
plot(x, y)




