struct Polynomial{T}
    coef::Vector{T}
    varname::Char
end

Polynomial(arr::Vector{Number}) = Polynomial(arr, 'x')

struct Term
    coef::Int
    exp::Int
    varname::Char
end

const uniexp = [collect('\u2070':'\u2071'); collect('\u00b2':'\u00b3'); collect('\u2074':'\u2079')]
const unitoascii = Dict([[u => i-1 for (i, u) in enumerate(uniexp)]; ])

touniexp(n) = (dig = reverse(digits(n)); String([uniexp[d+1] for d in dig]))
supertoascii(chararr) = String([unitoascii[u] for u in chararr])
uniexptoascii(s) = "^(" * String([haskey(unitoascii, c) ? unitoascii[c] : c for c in s]) * ")"

function Term(s::String, varname)
    
end

function findterms(str, varname)

end

