
def KMP_lookup_table(bytestring):
    tablesize = len(bytestring)
    table = [0] * (tablesize + 1)
    i, table[0] = 0, -1

    for i in range(len(bytestring)):
        table[i + 1] = table[i] + 1
        while table[i + 1] > 0 and bytestring[i] != bytestring[table[i + 1] - 1]:
            table[i + 1] = table[table[i + 1] - 1] + 1

    print(table)
    return table




def KMP_text_search(pattern, text):
    patlen, textlen = len(pattern), len(text)
    if patlen == 0
        return -1

    # Preprocessing
    lookup_table = KMP_lookup_table(pattern)
    i = j = 0
    while j < textlen:
        while i > -1 and pattern[i] != text[j]:
            i = lookup_table[i]
        i += 1
        j += 1
        if i >= patlen:
            print("Found at position ", j - i)
            i = lookup_table[i]



KMP_text_search("bab", "abebcaceaebabecabecababiba")



