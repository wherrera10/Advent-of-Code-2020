using GeometryTypes

@enum Direction None NE E SE S

movedeltas = Dict(NE => Point2(1, -1), E => Point2(1, 0), 
                  SE => Point2(1, 1), S => Point2(0, 1))

offsets = Dict(-2 => 0:1:4, -1 => -1:1:3, 0 => -2:1:2 , +1 => -3:1:1, +2 => -4:1:0) 

function linepoints(p::Point2, dir, offset)
    return [Point(p[1] + dx, p[2] + dy) for (dx, dy) in 
            map(d -> d .* movedeltas[dir], offsets[offset])]
end

println(linepoints(Point2(24, 28), NE, -2) )

struct Pentasol
    x::Int
    y::Int
    d::Direction
    offset::Int
end

