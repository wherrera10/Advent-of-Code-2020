using Lazy

dig_fl(n) = (d = digits(n); return d, 10 * d[end] + d[1])
isgp(n) = ((d, f) = dig_fl(n); d == reverse(d) && (length(d) < 3 || (f != 0 && n รท f == n / f)))
isgpendingwith(n, i) = n % 10 == i && isgp(n)
gapfulpalindromesendingwith(i, start) = filter(x -> isgpendingwith(x, i), Lazy.range(start))

for i in 1:9
    println("First 20 palindromic gapful numbers starting at 100 and ending with $i are:\n",
        take(20, gapfulpalindromesendingwith(i, 100)))
end

for (j, n) in [(100, 15), (1000, 10)], i in 1:9
    println("The last $n out of $j palindromic gapful numbers from 100 which end with $i are:\n",
        collect(take(j, gapfulpalindromesendingwith(i, 100)))[end-n:end])
end
