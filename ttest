cusing Primes 

function iscircularprime(n)
    if isprime(n)
        dig, ten = digits(n), zero(n) + 10
        for i in 1:length(dig)-1
            m = evalpoly(ten, circshift(dig, i))
            (m < n || !isprime(m)) && return false
        end
        return true
    end
    return false
end

function findcircular(N)
    i, circprimeseq = Int128(2), Int[]
    while length(circprimeseq) < N
i % 1000 == 0 && println(i)
        if iscircularprime(i)
println(i)
            push!(circprimeseq, i)
        end
        i += 1
    end
    return circprimeseq
end

println("The first 19 circular primes are: ", findcircular(19))

#=
 
say "\nThe next 4 circular primes, in repunit format, are:";
loop ( my $i = 7, my $count = 0; $count < 4; $i++ ) {
   my $target = 1 x $i;
   if $target.is-prime  {
      say "R($i)";
      $count++
   }
}
 
 
(5003, 9887, 15073, 25031, 35317, 49081).map: {
    my $now = now;
    say "R($_): Prime? ", ?is_prime("{1 x $_}"), "  {(now - $now).fmt: '%.2f'}"
}
