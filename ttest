using Combinatorics

function pseqs(minlen, maxlen, n)
    return Dict(len => filter(x -> length(x) == n && all(i -> minlen <= i <= maxlen, x),
        integer_partitions(len)) for len in n*minlen:n*maxlen)
end

makeintervals(seq) = (a, i = Int[], 1; for j in seq push!(a, [i, j]); i = j + 1; end; a)

minsumlen, maxsumlen = n * minlen, n * maxlen
for word in wordlist
    len = length(word)
    minsumlen <= len <= maxsumlen || continue
    for seq in pseqs[len]
        substrings = [word[n[1]:n[2]] for n in makeintervals(seq)]
        all(x -> x in set, substrings) && println(substrings, " => ", word)
    end
end

    
        
