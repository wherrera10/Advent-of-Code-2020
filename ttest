Julia's string literals are delineated by double quotes <code>" "</code>, which 
define string data that must begin and end on the sme line, and triple double quotes 
<code>""" """</code>, which may encompass multiple lines, with the embedded newlines 
and double quote characters kept as-is in such strings.

Single quotes in Julia are reserved for single characterssuch as ' ', which in Julia may be 
single 32-byte Unicode code characters as well as ordinary ACII code characters. The 
characters making up Julia strings may be any combination of ASCII, UTF-8, or Unicode data. 

The following, from the Julia REPL, defines a single line string in Julia:

<code>
julia> str = "Hello, world.\n"
"Hello, world.\n"

julia> """Contains "quote" characters"""
"Contains \"quote\" characters"

julia> s = "Some Unicode: \u2200 x \u2203 y"
"Some Unicode: ∀ x ∃ y"
</code>

Interpolation of strings can be done with all quoting constructs, and uses a '$' character
prior to the variable name or, with code interpolation, the code is enclosed in parantheses
and then the parentheses preceded by a '$' character:

<code>
julia> greet, whom = "hello", "world"
("hello", "world")

julia> "$greet, $whom.\n"  # $variable or $(code) is interpolated
"Hello, world.\n"

julia> "2 + 3 is $(2 + 3)"
"2 + 3 is 5"
</code>

There are some special rules regarding leading newlines and spaces when defining 
triple double quoted data, to make it easier to place such data in the text of the 
program without having later to strip the data of unwanted formatting.

Indentation of triple double quoted data is reduced to the extent to which 
all of the data is indented. Leading newlines are removed in the triple double quote 
starts at the end of a line. Therefore,

<code>
str = """
   This multiline string will have any leading newline and its uniform 3 space indentation 
   removed, but because the last line is indented 5 spaces, that will become a 2 space 
     indent in the final result. The two ending newlines are preserved.
   
   """
</code>
   
becomes:

<code>
"This multiline stringswill have any leading newline and its uniform 3 space indentation \nremoved, but because the last line is indented 5 spaces, that will become a 2 space \n  indent in the final result. The two ending newlines are preserved.\n\n"
</code>


