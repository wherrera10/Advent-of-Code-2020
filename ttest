using Makie, Statistics

# Point3f0 is a 3-tuple of 32 bit floats

# an Edge is a line segment where the points are sorted
struct Edge
    p1::Point3f0
    p2::Point3f0
    Edge(a, b) = new(min(a, b), max(a, b))
end

# a Face is defined by the points that are its vertices, in order.
Face = Vector{Point3f0}


""" 
    catmullclark(points, faces)

Perform one step of Catmull-Clark subdivision of a surface.
"""
proc CatmullClark(points, faces)
    # Generate the new face-points and list of edges, plus some lookup tables.
    newedges = Edge[]
    facepoints = Face()
    for f in faces
        ps = points[f]
        fp = mean(ps)
        push!(facepoints, fp)
        for p in ps
            push!(fp4p(p), fp)
	end
	for i in 1:2:length(f)-1
        p1, p2 = circshift(f, i)[1:2]
        e = Edge(f[i], f[i+1])
	    if !(e in newedges)
            push!(newedges, e)
	    end
	    push!(fp4e(e), fp)
	end
    
 
    # Generate the new edge-points and mid-points of edges, and a few more
    # lookup tables.
    set i [+ [llength $points] [llength $faces]]
    foreach e $edges {
	set ep [selectFrom $points $e]
	if {[llength $fp4e($e)] > 1} {
	    set mid [centroid $ep $fp4e($e)]
	} else {
	    set mid [centroid $ep]
	    foreach p $ep {
		lappend ep_heavy($p) $mid
	    }
	}
	lappend edgepoints $mid
	set en4e($e) $i
	foreach p $ep {
	    lappend ep4p($p) $mid
	}
	incr i
    }
 
    # Generate the new vertex points with our lookup tables.
    foreach p $points {
	if {[llength $fp4p($p)] >= 4} {
	    set n [llength $fp4p($p)]
	    lappend newPoints [add3 [mulC [/ [- $n 3.0] $n] $p] \
		    [mulC [/ 1.0 $n] [centroid $fp4p($p)]] \
		    [mulC [/ 2.0 $n] [centroid $ep4p($p)]]]
	} else {
	    # Update a point on the edge of a hole. This formula is not
	    # described on the WP page, but produces a nice result.
	    lappend newPoints [centroid $ep_heavy($p) [list $p $p]]
	}
    }
 
    # Now compute the new set of quadrilateral faces.
    set i [llength $points]
    foreach f $faces {
	foreach a $f b [lrot $f] c [lrot $f -1] {
	    lappend newFaces [list \
		    $a $en4e([edge $a $b]) $i $en4e([edge $c $a])]
	}
	incr i
    }
 
    list [concat $newPoints $facepoints $edgepoints] $newFaces
}

