
The Yellowstone sequence, also called the Yellowstone permutation, is defined as:

a(n) = n for n <= 3. 
For n >= 4,
a(n) - the smallest number not already in sequence such that a(n) is relatively prime to a(n-1) and is not relatively prime to a(n-2).

See also:

arXiv:1501.01669v2 [math.NT] 8 Mar 2015
https://oeis.org/A098550

Task: find and show as output the first 30 Yellowstone numbers.

Extra:  Demonstrate how to plot, with x = n and y coordinate a(n), the first 100 Yellowstone numbers.

function yellowstone(N)
    ylist = [1, 2, 3]
    b = Dict(1 => 1, 2 => 1, 3 => 1)
    while length(ylist) < N
        i = 4
        while true
            if !haskey(b, i) && (gcd(i, ylist[end]) == 1) && (gcd(i, ylist[end - 1]) > 1)
                push!(ylist, i)
                b[i] = 1
                break
            else
                i += 1
            end
        end
    end
    return ylist
end

println(yellowstone(30))

using Plots

x = 1:100
y = yellowstone(100)
plot(x, y)


